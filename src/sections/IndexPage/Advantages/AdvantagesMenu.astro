---
import OptionContent from "./OptionContent.astro";
import Quality from "@/icons/Advantages/Quality.astro";
import Car from "@/icons/Advantages/Car.astro";
import Idea from "@/icons/Advantages/Idea.astro";
import Delivery from "@/icons/Advantages/Delivery.astro";
import Speedometer from "@/icons/Advantages/Speedometer.astro";

interface Props {
  menuData: {
    icon: string;
    option: string;
    title: string;
    description: string;
    image: string;
  }[];
}

const { menuData } = Astro.props;

const iconMap: Record<string, typeof Quality> = {
  Quality,
  Car,
  Idea,
  Delivery,
  Speedometer,
};
---

<div>
  <menu
    class="relative max-w-fit mx-auto mb-10 flex gap-4 *:flex *:items-center *:gap-2 *:px-2 *:pt-3 *:pb-4"
  >
    {menuData.map((header, index) => {
      const Icon = iconMap[header.icon];
      return (
        <li class="relative text-primary cursor-pointer slider-tab transition-all" id=`${index}` data-is-clicked=false>
          <div class="flex gap-2 rounded p-1 opacity-60">
            {Icon && <Icon />}
            <p class="small_text">{header.option}</p>
          </div>
        </li>
      );
      })
    }
  </menu>
  <div class="swiper slider-container overflow-hidden">
    <div class="slider-wrapper swiper-wrapper">
      {menuData.map((content, index) => {
      return (
      <div class="swiper-slide">
        <OptionContent
          title={content.title}
          description={content.description}
          image={content.image} 
        />
      </div>
      )
      })}
    </div>
  </div>
</div>

<script>
  import Swiper from "swiper";
  import "swiper/css";
  const sliderTabs = document.querySelectorAll<HTMLElement>(".slider-tab");

  const swiper = new Swiper(".slider-container", {
    spaceBetween: 30,
    effect: "fade",
    speed: 300,
  });

  const firstTab = sliderTabs[0];
  firstTab.classList.add("isSelected");

  sliderTabs.forEach((tab, index, arr) => {
    tab.addEventListener("click", () => {
      swiper.slideTo(index);
      arr.forEach((tab) => {
        tab.dataset.isClicked = "false";
      });
      console.dir(tab)
      tab.dataset.isClicked = "true";

      arr.forEach((tab) => {
        if (tab.dataset.isClicked === "true") {
          tab.classList.add("isSelected");
        } else {
          tab.classList.remove("isSelected");
        }
      })
    });
  });

</script>

<style>
  .small_text {
    font-size: 0.9rem;
    font-weight: 500;
    font-family: "Inter", sans-serif;
  }

  menu::after {
    content: "";
    width: 100%;
    height: 4px;
    position: absolute;
    background: #4b707f;
    bottom: 0;
    z-index: 5;
  }

  .isSelected::after {
    content: "";
    width: 100%;
    height: 4px;
    position: absolute;
    background: #E82128;
    bottom: 0;
    left: 0;
    z-index: 6;
  }

  .isSelected {
    div {
      background-color: #fee2e2;
      opacity: 1;
    }
  }
</style>
